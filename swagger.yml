swagger: '2.0'
info:
  description: DiPay project documentation
  version: '1.0'
  title: DiPay
  termsOfService: 'urn:tos'
  contact: {}
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
host: 'localhost:8080'
basePath: /
tags:
  - name: Transaction
    description: Transaction Controller
  - name: User
    description: User Controller
  - name: Wallet
    description: Wallet Controller
paths:
  /transaction:
    post:
      tags:
        - Transaction
      summary: Creation of new transaction
      operationId: performTransactionUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: transactionRequest
          description: transactionRequest
          required: true
          schema:
            $ref: '#/definitions/Request«TransactionDTO»'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response«TransactionDTO»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /user:
    post:
      tags:
        - User
      summary: Create new User
      operationId: createUserUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: userRequest
          description: userRequest
          required: true
          schema:
            $ref: '#/definitions/Request«UserDTO»'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response«UserDTO»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/user/{id}':
    get:
      tags:
        - User
      summary: Find exist User
      operationId: findUserUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response«UserDTO»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    delete:
      tags:
        - User
      summary: Delete User
      operationId: deleteUserUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response«UserDTO»'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
    patch:
      tags:
        - User
      summary: Update User
      operationId: updateeUserUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: userRequest
          description: userRequest
          required: true
          schema:
            $ref: '#/definitions/Request«UserDTO»'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response«UserDTO»'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /wallet:
    post:
      tags:
        - Wallet
      summary: Add money to Wallet
      operationId: addValueToWalletUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: walletRequest
          description: walletRequest
          required: true
          schema:
            $ref: '#/definitions/Request«WalletDTO»'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response«WalletDTO»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
definitions:
  Request«TransactionDTO»:
    type: object
    required:
      - request
    properties:
      request:
        $ref: '#/definitions/TransactionDTO'
    title: Request«TransactionDTO»
  Request«UserDTO»:
    type: object
    required:
      - request
    properties:
      request:
        $ref: '#/definitions/UserDTO'
    title: Request«UserDTO»
  Request«WalletDTO»:
    type: object
    required:
      - request
    properties:
      request:
        $ref: '#/definitions/WalletDTO'
    title: Request«WalletDTO»
  Response«TransactionDTO»:
    type: object
    required:
      - data
    properties:
      data:
        $ref: '#/definitions/TransactionDTO'
    title: Response«TransactionDTO»
  Response«UserDTO»:
    type: object
    required:
      - data
    properties:
      data:
        $ref: '#/definitions/UserDTO'
    title: Response«UserDTO»
  Response«WalletDTO»:
    type: object
    required:
      - data
    properties:
      data:
        $ref: '#/definitions/WalletDTO'
    title: Response«WalletDTO»
  TransactionDTO:
    type: object
    properties:
      id:
        type: integer
        format: int64
      value:
        type: number
        format: double
      payer:
        type: integer
        format: int64
      payee:
        type: integer
        format: int64
    title: TransactionDTO
  UserDTO:
    type: object
    required:
      - document
      - email
      - fullName
      - id
      - password
      - userType
    properties:
      document:
        type: string
      email:
        type: string
      fullName:
        type: string
      id:
        type: integer
        format: int64
      userType:
        type: string
        enum:
          - COMMOM
          - SHOPKEEPER
      password:
        type: string
    title: UserDTO
